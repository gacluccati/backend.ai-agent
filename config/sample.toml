[etcd]
namespace = "local"                         # env: BACKEND_NAMESPACE
addr = { host = "127.0.0.1", port = 2379 }  # env: BACKEND_ETCD_ADDR (host:port)
user = ""                                   # env: BACKEND_ETCD_USER
password = ""				    # env: BACKEND_ETCD_PASSWORD


[agent]
# Change the reported host/address of the agent.
# The manager will use this value to connect to the agent.
# If host is an empty string, the agent tries to auto-detect it with a fallback to "127.0.0.1".
# For mobile environments such as developer laptops which roam around different networks,
# it is HIGHLY RECOMMENDED to set this to "127.0.0.1" manually.
rpc-listen-addr = { host = "", port = 6001 }
# env: BACKEND_AGENT_HOST_OVERRIDE
# env: BACKEND_AGENT_PORT

# Override the name of this agent.
# If empty or unspecified, the agent builds this from the hostname by prefixing it with "i-",
# like "i-hostname".  The "i-" prefix is not mandatory, though.
# This affects the per-node configuration scope.
# id = "i-something-special"

# Set the scaling group of this agent.
# This affects the per-sgroup configuration scope.
scaling-group = "default"

# Create a PID file so that daemon managers could keep track of us.
# If set to an empty string, it does NOT create the PID file.
# pid-file = "./agent.pid"             # env: BACKEND_PID_FILE


[registry]
# Registry for use with k8s cluster 
# All kernel container images should be saved here 
addr = { host = "localhost", port = 5000 }


[baistatic]
# NFS information for backend.ai static files
# This configuration is optional
# Without this, Backend.AI will try to mount static files from hostPath of worker node
nfs-addr = "localhost"
path = "/backend.ai"
capacity = 10 # In Gi, without any suffix
options = "nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,noresvport" # NFS mount option, seperated with comma 


[vfolder-pv]
# Needed when serving vFolder as NFS
name = local
nfs-addr = "localhost"
path = "/"
capacity = 10 # In Gi, without any suffix
options = "nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,noresvport" # NFS mount option, seperated with comma 

[container]
# The port range to expose public service ports.
# If too small, this may limit the maximum number of containers
# allowed to run simultaneously.
port-range = [30000, 31000]  # env: BACKEND_CONTAINER_PORT_RANGE

# The UID to be set to the container's main process.
# If not specified, it uses the same user which the agent runs as.
kernel-uid = -1

# Change the reported host/address of the containers.
# The manager will use this value to connect to containers.
# If empty or unspecified, the agent tries to auto-detect it with a fallback to "127.0.0.1".
# For mobile environments such as developer laptops which roam around different networks,
# it is HIGHLY RECOMMENDED to set this to "127.0.0.1" manually.
# kernel-host = "127.0.0.1"   # env: BACKEND_KERNEL_HOST_OVERRIDE

# One of: "docker", "jail".
# "docker" uses the Docker's default apparmor and seccomp profiles.
# "jail" uses Backend.AI Jail to programmatically filter syscalls.
sandbox-type = "docker"

# Only meaningful when sandbox-type = "jail"
# Additional arguments passed to the jail executable in containers.
jail-args = []

# One of: "hostdir", "memory"
# "hostdir": creates an empty host directory and mount it as /home/work of containers.
# "memory": creates an in-memory tmpfs and mount it as /home/work of containers. (only supported in Linux)
scratch-type = "hostdir"        # env: BACKEND_SANDBOX_TYPE

# Only meaningful when scratch-type = "hostdir"
# If not exists, it is auto-created.
scratch-root = "./scratches"    # env: BACKEND_SCRATCH_ROOT

# Limit the maximum size of the scratch space.
# If set zero, it is unlimited.
scratch-size = "1G"


[watcher]
# The address to accept the watcher API requests
service-addr = { host = "127.0.0.1", port = 6009 }
# env: BACKEND_WATCHER_SERVICE_IP
# env: BACKEND_WATCHER_SERVICE_PORT

# SSL configuration for the watcher's HTTP endpoint
ssl-enabled = false
ssl-cert = ""
ssl-key = ""

# The target systemd service name to watch and control.
target-service = "backendai-agent.service"

# If "reload" is supported, set true.
soft-reset-available = false


[logging]
# One of: "NOTSET", "DEBUG", "INFO", "WARNING", "ERROR", "CRITICAL"
# Set the global logging level.
level = "INFO"

# Multi-choice of: "console", "logstash", "file"
# For each choice, there must be a "logging.<driver>" section
# in this config file as exemplified below.
drivers = ["console"]


[logging.console]
# If set true, use ANSI colors if the console is a terminal.
# If set false, always disable the colored output in console logs.
colored = true

# One of: "simple", "verbose"
format = "simple"


[logging.file]
# The log file path and filename pattern.
# All messages are wrapped in single-line JSON objects.
# Rotated logs may have additional suffixes.
# For production, "/var/log/backend.ai" is recommended.
path = "./logs"
filename = "agent.log"

# The maximum number of rotated logs.
backup-count = 5

# The log file size to begin rotation.
rotation-size = "10M"


[logging.logstash]
# The endpoint to publish logstash records.
endpoint = { host = "localhost", port = 9300 }

# One of: "zmq.push", "zmq.pub", "tcp", "udp"
protocol = "tcp"

# SSL configs when protocol = "tcp"
ssl-enabled = true
ssl-verify = true


# Specify additional package namespaces to include in the logs
# and their individual log levels.
# Note that the actual logging level applied is the conjunction of the global logging level and the
# logging levels specified here for each namespace.
[logging.pkg-ns]
"" = "WARNING"
"aiodocker" = "INFO"
"aiotools" = "INFO"
"aiohttp" = "INFO"
"ai.backend" = "INFO"


[resource]
# The amount of CPU cores reserved for the agent and the OS.
# This will be subtracted from the resource capacity reported to the manager.
reserved-cpu = 1

# The amount of memory reserved for the agent and the OS.
# This will be subtracted from the resource capacity reported to the manager.
reserved-mem = "1G"

# The amount of disk space reserved for the agent and the OS.
# This will be subtracted from the resource capacity reported to the manager.
reserved-disk = "8G"


[debug]
# If set true, it does not actually delete the containers after they terminate or are terminated
# so that developers can inspect the contaienr logs.
# This is useful for debugging errors that make containers to terminate immediately after kernel
# launches, such as jail bugs.
skip-container-deletion = false
