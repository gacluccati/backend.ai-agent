language: python
dist: xenial
sudo: required
cache: pip
services:
  - docker
  - redis-server
addons:
  apt:
    packages:
    - libsnappy-dev

# stage decl.
stages:
  - name: test
  - name: deploy
    if: tag IS present

# build matrix for test stage
os:
  - linux
python:
  - "3.6"
  - "3.7"

# default test job
install:
  - pip install -U pip setuptools
  - pip install -U -r requirements-ci.txt
  - mkdir -p ~/.config/backend.ai
  - cp config/ci.toml ~/.config/backend.ai/agent.toml
  - mkdir -p /tmp/scratches
  - mkdir -p /tmp/vfroot/local
before_script:
  # load etcd server
  - mkdir -p /tmp/etcd
  - docker run -d -p 2379:2379 -p 2380:2380 --name backendai-etcd
     -v /tmp/etcd:/etcd-data
     quay.io/coreos/etcd:v3.3.12
     /usr/local/bin/etcd
     --name backendai-etcd
     --data-dir /etcd-data
     --listen-client-urls http://0.0.0.0:2379
     --advertise-client-urls http://0.0.0.0:2379
     --listen-peer-urls http://0.0.0.0:2380
     --initial-advertise-peer-urls http://0.0.0.0:2380
     --initial-cluster backendai-etcd=http://0.0.0.0:2380
     --initial-cluster-token backendai-etcd-token
     --initial-cluster-state new
     --auto-compaction-retention 1
  - docker exec -it backendai-etcd /bin/ash -c 'ETCDCTL_API=3 etcdctl put /sorna/testing/config/docker/registry/index.docker.io "https://registry-1.docker.io"'
  - docker exec -it backendai-etcd /bin/ash -c 'ETCDCTL_API=3 etcdctl put /sorna/testing/config/docker/registry/index.docker.io/username "lablup"'
  - docker exec -it backendai-etcd /bin/ash -c 'ETCDCTL_API=3 etcdctl put /sorna/testing/config/redis/addr 127.0.0.1:6379'
  - docker exec -it backendai-etcd /bin/ash -c 'ETCDCTL_API=3 etcdctl put /sorna/testing/volumes/_mount /tmp/vfroot'
  - docker exec -it backendai-etcd /bin/ash -c 'ETCDCTL_API=3 etcdctl put /sorna/testing/volumes/_default_host local'
  # set capabilities to python binary
  - sudo setcap cap_sys_ptrace,cap_sys_admin,cap_dac_override+eip $(readlink -f $(which python))
  # pull minimal kernel images and prepare krunner-env
  - docker pull lablup/lua:5.3-alpine3.8
  - python -m ai.backend.agent.kernel build-krunner-env alpine3.8
  - python -m ai.backend.agent.kernel build-krunner-env ubuntu16.04
script:
  - python -m flake8 src tests
  - python -m pytest -v --cov=src
after_success:
  - codecov
after_script:
  - killall -9 python

# stage def.
jobs:
  include:
    # test stage is implicitly included.
    - stage: deploy
      python: "3.6"
      before_install: skip
      install: skip
      before_script: skip
      script: skip
      after_script: skip
      after_success: true
      deploy:
        on:
          tags: true
        provider: pypi
        distributions: sdist bdist_wheel
        skip_upload_docs: true
        user: "@token"
        password:
          secure: "ZwSiRwStxuj/s7p6aaj6mfO8sfRs+ZkuCiwejAQFQoiM6BdSCgXLunRduIHOI2Xb1CRuwV8i0uAK44dWJ2z3p1i+hnIoau++93e9vxKN+uWHei5fsKpPnLG18a8aeIU98lwVY0AHOyeoWdtyShjaT0b1+6SryNNjqeFDmpJaJpKxzOCPNASyxHjJcal/nS54Kn3KVUeqk2wPsltzQ4Guu4sx/O7f8O6BS77TM1NFODqSrDtu0nSiXv8M3io2gfM+swmWM3vPPUdLpke5/YQQIZruPhJq6ix9aklKc/Nic8zP1ddG+/mrDaIQulBWPn6ckI2WZP27hKUVQ7F4R+jgLBUBZ3mkZELblTTDP61/JyGO5BxXxBjFGxjYAB3Aqi/ruw4pRXIiuBxMs06nsadGixa4CkCcJ1o5lAIEl4dmNRO52pD35lS7oLMz9A0xyM/rpTKNK2q3Hsu+tmiExFr9m4TufbTZqgbEMMy8L9ypWlgKrQsVAxZRp7PuwH65KsfUquMkmhqIzdaTDHe5/Cc9gjKSVKMBUHYBxJsuXZjf/U6NuHuOLr4txBgtcqAQsZBp+79/KvkPYrxUvx9xB5aKPrmljAYxuZjLtpVXItF31c9bOvaTZzHEVLy0r2ciwJi6GpqKAjosRyokk6cUaAc99V75/uDpHf9ugHdvRVnvgZQ="
  allow_failures:
    - python: "3.7"

notifications:
  webhooks:
    secure: "TT5qgI/QCVuBHmBgI89i9krQGY6scCk8138jBtPGVORj6yHx8pljk3ROJ/EwxxY560ywiWqtxak8SpfO5JwmBqG35cO7OAQMSPhCdtTKL2E25EalJs8MXlzmPm8S7hp4eAUUeBFscH7KzBm824ncvxWFU3FuAk0ZrTGmCeUn4XFjL3TYkfjrE0Oe6TqZUr1tpVh7yk7StEJFjun5uzVCG6uRWjvlbNnULmJEU3Yf0W7u8/cBYqqVOkOCuVKIZKZexuUDT7Tm39XKyacHFcJ4TCzeBo5kYRusudoHHVfWThE4cevtUvWN9HjuGBpF5RXTHESd/nu7P+Wcb9Zgk1+WyeAO1S3v0c/+FYdcmUculGjNtrTSvzrs6F7HWIkn5fuFuuj0b7oLh/lHu3j75Qqr0CPNkTFLhQIwpOR/aWjPeKg0XIQCFGaCSuJqh9Sw5QSBqoBDNwU6+TW8Bq98519B41oWFO1pKD3VvNcy1HANVror1KgqNoJj9K35lonXVsl5384JMRQCO0hH1GIZWY9Nk2ljq+VT5PGOai5qQ7KKRCE7lIJwjGIxwdrBlDzepMvUL8dHtZfANTTZ8SiqSQ+woAR9iRZlKw2jyyJ/hdzhtXtcnANU5hDSRrsV8Q7nxpM9BJBROZnKMIG0z+oUoDQ5KFbDJHRWeL7H9zTuw+V//ZQ="
