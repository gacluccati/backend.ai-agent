language: python
dist: xenial
cache: pip
services:
  - docker
  - redis
addons:
  apt:
    packages:
    - libsnappy-dev

# stage decl.
stages:
  - name: test
  - name: deploy
    if: tag IS present

# build matrix for test stage
os:
  - linux
python:
  - "3.8"

# default test job
install:
  - pip install -U pip setuptools
  - |
    # Use the same branch (if exists) for the backend.ai-common installation
    export BRANCH=$(if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then echo $TRAVIS_BRANCH; else echo $TRAVIS_PULL_REQUEST_BRANCH; fi)
    git ls-remote --heads 'https://github.com/lablup/backend.ai-common' | grep -q "refs/heads/${BRANCH}"
    if [ $? -eq 0 ]; then
      sed -i "s%\(backend.ai-common\)@master%\1@${BRANCH}%" requirements-ci.txt
    fi
  - pip install -U -r requirements-ci.txt
  - |
    # temporary monkey-patch for aiozmq in Python 3.8
    _AIOZMQ_PATCH_FILE="/home/travis/virtualenv/python3.8.0/lib/python3.8/site-packages/aiozmq/rpc/base.py"
    if [ -f "${_AIOZMQ_PATCH_FILE}" ]; then
      sed -i 's/asyncio.async(\([^,]\+\), loop=[^,]\+)/asyncio.create_task(\1)/g' "${_AIOZMQ_PATCH_FILE}"
    fi
  - mkdir -p ~/.config/backend.ai
  - cp config/ci.toml ~/.config/backend.ai/agent.toml
  - mkdir -p /tmp/scratches
  - mkdir -p /tmp/vfroot/local
before_script:
  # pull minimal kernel images and prepare krunner-env
  - docker pull alpine:3.8
  - docker pull nginx:1.17-alpine
  - docker pull redis:5.0.5-alpine
  - docker pull lablup/lua:5.3-alpine3.8
script:
  - python -m flake8 src tests
  - python -m mypy src/ai/backend
  - python -m pytest -v --cov=src
after_success:
  - codecov
after_script:
  - killall -9 python

# stage def.
jobs:
  include:
    - stage: test
      python: "3.8"
    - stage: deploy
      python: "3.8"
      before_install: skip
      install: skip
      before_script: skip
      script: skip
      after_script: skip
      after_success: true
      deploy:
        on:
          tags: true
        provider: pypi
        distributions: sdist bdist_wheel
        upload_docs: false
        username: "__token__"
        password:
          secure: "KPPJgs7FMnJrs4RNiqR9c8qi0y6zlk/U1ec2pp4VAkE+GoVN8UtyX9jMd9NxFlXieaRTYWR5//WP3x3YKOJFBbt+lN4x5y5CZHG5e8R7Uu8JdDpJIVf+uHRTmauW3QjrKmrOZJKWZ0o35MjEkY2Wv2lTBqMdlNiYccgscN77wwtrmFNtnvHKmxt336o78sqSX9hh5kHKQO6MSxOc4jZgy/n8nNysIG7cFNunnVR/x3c410OOHg6Rgx+KoLx5COvURNiFP/khFEdyIYR0/sKgbepF4Hhd2H2eIhr7op1GCFNAvmHGa+bSLeqr93JdXcH6IxC2dy2M32/jlExESy56uKNoc5sCsrHo16n2iqBE7JpvcYrT0xdIf4nPeGZlavS5MtN0apNv8wQTOdYqRuXRAvM7NajNOatiINxfmg2zq3CrHMpXFHRIfYpZMFM2fGkd3hdaXmCmh9B2XGUDcZJzh42Wwjqz/jO+sN/P0jcF8g/3nwrLuGlCGg2LVUQre6B0kyChQxlkbjxEhApDuVtBeKTGuiu6NdxVLMG8BCGSvf4awCn+N2X8yEQbTz91MCDbmdDLKHMWu+z1fkIWYPWw01rxL1cBQoCpiBg5OZG6JYFmLz9vm7V7I9Xh5D2Zj815TecoG7QwAw5tbt8ULIHSUbSqjnRMdWw2XwZdbuf+gw4="

notifications:
  webhooks:
    secure: "TT5qgI/QCVuBHmBgI89i9krQGY6scCk8138jBtPGVORj6yHx8pljk3ROJ/EwxxY560ywiWqtxak8SpfO5JwmBqG35cO7OAQMSPhCdtTKL2E25EalJs8MXlzmPm8S7hp4eAUUeBFscH7KzBm824ncvxWFU3FuAk0ZrTGmCeUn4XFjL3TYkfjrE0Oe6TqZUr1tpVh7yk7StEJFjun5uzVCG6uRWjvlbNnULmJEU3Yf0W7u8/cBYqqVOkOCuVKIZKZexuUDT7Tm39XKyacHFcJ4TCzeBo5kYRusudoHHVfWThE4cevtUvWN9HjuGBpF5RXTHESd/nu7P+Wcb9Zgk1+WyeAO1S3v0c/+FYdcmUculGjNtrTSvzrs6F7HWIkn5fuFuuj0b7oLh/lHu3j75Qqr0CPNkTFLhQIwpOR/aWjPeKg0XIQCFGaCSuJqh9Sw5QSBqoBDNwU6+TW8Bq98519B41oWFO1pKD3VvNcy1HANVror1KgqNoJj9K35lonXVsl5384JMRQCO0hH1GIZWY9Nk2ljq+VT5PGOai5qQ7KKRCE7lIJwjGIxwdrBlDzepMvUL8dHtZfANTTZ8SiqSQ+woAR9iRZlKw2jyyJ/hdzhtXtcnANU5hDSRrsV8Q7nxpM9BJBROZnKMIG0z+oUoDQ5KFbDJHRWeL7H9zTuw+V//ZQ="
