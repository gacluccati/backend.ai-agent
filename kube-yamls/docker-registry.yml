---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: docker-registry
spec:
  accessModes:
  - ReadWriteMany
  volumeMode: Filesystem
  resources:
    requests:
      storage: 100Gi
  selector:
    matchLabels:
      type: amazonEFS
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: docker-registry
  labels:
    app: docker-registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: docker-registry
  template:
    metadata:
      labels:
        app: docker-registry
    spec:
      containers:
      - name: docker-registry-pod
        image: registry:2
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 443
        env:
        - name: REGISTRY_HTTP_ADDR
          value: 0.0.0.0:443
        - name: REGISTRY_HTTP_TLS_CERTIFICATE
          value: /certs/k8s-registry.backend.ai.crt
        - name: REGISTRY_HTTP_TLS_KEY
          value: /certs/k8s-registry.backend.ai.key
        volumeMounts:
        - name: pvc
          mountPath: /var/lib/registry
        - name: tls-certs
          mountPath: /certs
      volumes:
      - name: pvc
        persistentVolumeClaim:
          claimName: docker-registry
      - name: tls-certs
        configMap:
          name: docker-registry-certs
---
apiVersion: v1
kind: Service
metadata:
  name: docker-registry-service
  labels:
    app: docker-registry-service
spec:
  ports:
  - name: registry
    protocol: TCP
    port: 443
    targetPort: 443
  selector:
    app: docker-registry
  type: ClusterIP


